worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Activate Balance load
    upstream ai_web_assistant {
        least_conn;
        server 127.0.0.1:8055;
        server 127.0.0.1:8056;
        server 127.0.0.1:8057;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            # Pass client information to the backend
            proxy_pass http://ai_web_assistant;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;


            # Forward client browser and session information
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header Accept-Language $http_accept-language;
            proxy_set_header Referer $http_referer;


            #Forward client's authorization data 
            proxy_set_header Authorization $http_authorization;
        }


        #  Enable websocket connection
        location /ws {
            proxy_pass http://ai_web_assistant;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

    }
    # This is responsible for redirect not secure user request 'http' to actual 'https'
    # server {
    #     listen 80;
    #     server_name localhost;

    #     location / {
    #         return 301 https://$host$request_url;
    #     }
    # }
}
